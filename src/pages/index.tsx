import { SignIn } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";


import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import { 
  SignUpButton,
  SignInButton,
  SignOutButton,
  UserButton,
  useUser,
  SignedIn,
  ClerkProvider,
  SignedOut,
  RedirectToSignIn,
} from "@clerk/nextjs";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const {user} = useUser();

  console.log(user);

  if (!user) return null;

  return (
    <div className="flex gap-3 w-full">
      <Image src={user.imageUrl}
        alt="Profile image"
        className="h-16 w-16 rounded-full"
        width={56}
        height={56} />
       <input placeholder="Bark bark bark!" className="grow bg-transparent" />
    </div>
  )
}


type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex p-8 border-b border-slate-400 p-4 gap-3">
      <Image src={author.profilePicture} 
      alt={`@${author.username}`}
      className="h-14 w-14 rounded-full"
      width={56}
      height={56} />
      <div className="flex flex-col">
        <div className="flex text-slate-400 gap-1">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{` Â· ${dayjs(
            post.createdAt
            ).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
      
    </div>
  );
}

export default function Home() {

  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading ...</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400">

          <div className="border-b border-slate-400 p-4">
            {!user.isSignedIn && <div className="flex justify-center"><SignInButton /> </div>}
            {user.isSignedIn && <CreatePostWizard />}
          </div>

          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id}/>
            ))}
          </div>


          <UserButton />

          <SignedIn>
          </SignedIn>

          <SignedOut>
            <SignUpButton />
          </SignedOut>
        </div>
      </main>
    </>
  );

}

